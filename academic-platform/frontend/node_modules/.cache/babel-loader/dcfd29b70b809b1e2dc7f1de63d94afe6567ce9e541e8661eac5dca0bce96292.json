{"ast":null,"code":"var _jsxFileName = \"/workspaces/pro-2.0/academic-platform/frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\n\n// 20 alumnos (nombres ficticios)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOMBRES = ['Ana', 'Luis', 'Carlos', 'María', 'Juan', 'Sofía', 'Pedro', 'Lucía', 'Diego', 'Elena', 'Jorge', 'Valeria', 'Andrés', 'Camila', 'Ricardo', 'Isabela', 'Fernando', 'Marta', 'Raúl', 'Paula'];\n\n// 10 cursos\nconst CURSOS = ['Matemáticas', 'Historia', 'Física', 'Química', 'Biología', 'Inglés', 'Arte', 'Música', 'Geografía', 'Literatura'];\n\n// Generar datos iniciales aleatorios\nfunction generarDatos() {\n  return CURSOS.map(curso => ({\n    curso,\n    alumnos: NOMBRES.map(nombre => ({\n      nombre,\n      nota: Math.floor(Math.random() * 21) // notas de 0 a 20\n    }))\n  }));\n}\nconst App = () => {\n  _s();\n  const [data, setData] = useState(generarDatos());\n  const [mostrarGrafico, setMostrarGrafico] = useState(false);\n\n  // Cambiar nota en input\n  const cambiarNota = (cursoIndex, alumnoIndex, value) => {\n    const newData = [...data];\n    const nota = Number(value);\n    if (!isNaN(nota) && nota >= 0 && nota <= 20) {\n      newData[cursoIndex].alumnos[alumnoIndex].nota = nota;\n      setData(newData);\n    }\n  };\n\n  // Preparar datos para gráfico: promedio por curso\n  const datosGrafico = data.map(({\n    curso,\n    alumnos\n  }) => {\n    const promedio = alumnos.reduce((acc, a) => acc + a.nota, 0) / alumnos.length;\n    return {\n      curso,\n      promedio: Number(promedio.toFixed(2))\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rendimiento Acad\\xE9mico - 10 Cursos y 20 Alumnos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), data.map(({\n      curso,\n      alumnos\n    }, cursoIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: curso\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"8\",\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%',\n          maxWidth: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Alumno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nota (0-20)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: alumnos.map(({\n            nombre,\n            nota\n          }, alumnoIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                max: \"20\",\n                value: nota,\n                onChange: e => cambiarNota(cursoIndex, alumnoIndex, e.target.value),\n                style: {\n                  width: '60px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, nombre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, curso, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setMostrarGrafico(true),\n      style: {\n        padding: '10px 20px',\n        fontSize: 16,\n        marginTop: 20\n      },\n      children: \"Colgar Nota y Ver Gr\\xE1ficos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), mostrarGrafico && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 40,\n        width: '100%',\n        height: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Promedio de notas por curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: datosGrafico,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"curso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [0, 20]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"promedio\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HOwq9l/nzlFLrcse4RgMH4F8J5Y=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 106,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","NOMBRES","CURSOS","generarDatos","map","curso","alumnos","nombre","nota","Math","floor","random","App","_s","data","setData","mostrarGrafico","setMostrarGrafico","cambiarNota","cursoIndex","alumnoIndex","value","newData","Number","isNaN","datosGrafico","promedio","reduce","acc","a","length","toFixed","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","border","cellPadding","borderCollapse","width","maxWidth","type","min","max","onChange","e","target","onClick","fontSize","marginTop","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","fill","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/workspaces/pro-2.0/academic-platform/frontend/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\n\n// 20 alumnos (nombres ficticios)\nconst NOMBRES = [\n  'Ana', 'Luis', 'Carlos', 'María', 'Juan', 'Sofía', 'Pedro', 'Lucía', 'Diego', 'Elena',\n  'Jorge', 'Valeria', 'Andrés', 'Camila', 'Ricardo', 'Isabela', 'Fernando', 'Marta', 'Raúl', 'Paula'\n];\n\n// 10 cursos\nconst CURSOS = ['Matemáticas', 'Historia', 'Física', 'Química', 'Biología', 'Inglés', 'Arte', 'Música', 'Geografía', 'Literatura'];\n\n// Generar datos iniciales aleatorios\nfunction generarDatos() {\n  return CURSOS.map(curso => ({\n    curso,\n    alumnos: NOMBRES.map(nombre => ({\n      nombre,\n      nota: Math.floor(Math.random() * 21), // notas de 0 a 20\n    })),\n  }));\n}\n\nconst App = () => {\n  const [data, setData] = useState(generarDatos());\n  const [mostrarGrafico, setMostrarGrafico] = useState(false);\n\n  // Cambiar nota en input\n  const cambiarNota = (cursoIndex, alumnoIndex, value) => {\n    const newData = [...data];\n    const nota = Number(value);\n    if (!isNaN(nota) && nota >= 0 && nota <= 20) {\n      newData[cursoIndex].alumnos[alumnoIndex].nota = nota;\n      setData(newData);\n    }\n  };\n\n  // Preparar datos para gráfico: promedio por curso\n  const datosGrafico = data.map(({ curso, alumnos }) => {\n    const promedio = alumnos.reduce((acc, a) => acc + a.nota, 0) / alumnos.length;\n    return { curso, promedio: Number(promedio.toFixed(2)) };\n  });\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\n      <h1>Rendimiento Académico - 10 Cursos y 20 Alumnos</h1>\n      {data.map(({ curso, alumnos }, cursoIndex) => (\n        <div key={curso} style={{ marginBottom: 20 }}>\n          <h2>{curso}</h2>\n          <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse', width: '100%', maxWidth: 600 }}>\n            <thead>\n              <tr>\n                <th>Alumno</th>\n                <th>Nota (0-20)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {alumnos.map(({ nombre, nota }, alumnoIndex) => (\n                <tr key={nombre}>\n                  <td>{nombre}</td>\n                  <td>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={nota}\n                      onChange={(e) => cambiarNota(cursoIndex, alumnoIndex, e.target.value)}\n                      style={{ width: '60px' }}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n\n      <button\n        onClick={() => setMostrarGrafico(true)}\n        style={{ padding: '10px 20px', fontSize: 16, marginTop: 20 }}\n      >\n        Colgar Nota y Ver Gráficos\n      </button>\n\n      {mostrarGrafico && (\n        <div style={{ marginTop: 40, width: '100%', height: 400 }}>\n          <h2>Promedio de notas por curso</h2>\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={datosGrafico} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"curso\" />\n              <YAxis domain={[0, 20]} />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"promedio\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;;AAE3G;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,CACd,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EACrF,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CACnG;;AAED;AACA,MAAMC,MAAM,GAAG,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC;;AAElI;AACA,SAASC,YAAYA,CAAA,EAAG;EACtB,OAAOD,MAAM,CAACE,GAAG,CAACC,KAAK,KAAK;IAC1BA,KAAK;IACLC,OAAO,EAAEL,OAAO,CAACG,GAAG,CAACG,MAAM,KAAK;MAC9BA,MAAM;MACNC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAE;IACxC,CAAC,CAAC;EACJ,CAAC,CAAC,CAAC;AACL;AAEA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAACc,YAAY,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM6B,WAAW,GAAGA,CAACC,UAAU,EAAEC,WAAW,EAAEC,KAAK,KAAK;IACtD,MAAMC,OAAO,GAAG,CAAC,GAAGR,IAAI,CAAC;IACzB,MAAMN,IAAI,GAAGe,MAAM,CAACF,KAAK,CAAC;IAC1B,IAAI,CAACG,KAAK,CAAChB,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,EAAE,EAAE;MAC3Cc,OAAO,CAACH,UAAU,CAAC,CAACb,OAAO,CAACc,WAAW,CAAC,CAACZ,IAAI,GAAGA,IAAI;MACpDO,OAAO,CAACO,OAAO,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGX,IAAI,CAACV,GAAG,CAAC,CAAC;IAAEC,KAAK;IAAEC;EAAQ,CAAC,KAAK;IACpD,MAAMoB,QAAQ,GAAGpB,OAAO,CAACqB,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACrB,IAAI,EAAE,CAAC,CAAC,GAAGF,OAAO,CAACwB,MAAM;IAC7E,OAAO;MAAEzB,KAAK;MAAEqB,QAAQ,EAAEH,MAAM,CAACG,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC;IAAE,CAAC;EACzD,CAAC,CAAC;EAEF,oBACE/B,OAAA;IAAKgC,KAAK,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC/CnC,OAAA;MAAAmC,QAAA,EAAI;IAA8C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtDzB,IAAI,CAACV,GAAG,CAAC,CAAC;MAAEC,KAAK;MAAEC;IAAQ,CAAC,EAAEa,UAAU,kBACvCnB,OAAA;MAAiBgC,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAG,CAAE;MAAAL,QAAA,gBAC3CnC,OAAA;QAAAmC,QAAA,EAAK9B;MAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBvC,OAAA;QAAOyC,MAAM,EAAC,GAAG;QAACC,WAAW,EAAC,GAAG;QAACV,KAAK,EAAE;UAAEW,cAAc,EAAE,UAAU;UAAEC,KAAK,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAV,QAAA,gBACpGnC,OAAA;UAAAmC,QAAA,eACEnC,OAAA;YAAAmC,QAAA,gBACEnC,OAAA;cAAAmC,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfvC,OAAA;cAAAmC,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvC,OAAA;UAAAmC,QAAA,EACG7B,OAAO,CAACF,GAAG,CAAC,CAAC;YAAEG,MAAM;YAAEC;UAAK,CAAC,EAAEY,WAAW,kBACzCpB,OAAA;YAAAmC,QAAA,gBACEnC,OAAA;cAAAmC,QAAA,EAAK5B;YAAM;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjBvC,OAAA;cAAAmC,QAAA,eACEnC,OAAA;gBACE8C,IAAI,EAAC,QAAQ;gBACbC,GAAG,EAAC,GAAG;gBACPC,GAAG,EAAC,IAAI;gBACR3B,KAAK,EAAEb,IAAK;gBACZyC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACC,UAAU,EAAEC,WAAW,EAAE8B,CAAC,CAACC,MAAM,CAAC9B,KAAK,CAAE;gBACtEW,KAAK,EAAE;kBAAEY,KAAK,EAAE;gBAAO;cAAE;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GAXEhC,MAAM;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYX,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GA1BAlC,KAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA2BV,CACN,CAAC,eAEFvC,OAAA;MACEoD,OAAO,EAAEA,CAAA,KAAMnC,iBAAiB,CAAC,IAAI,CAAE;MACvCe,KAAK,EAAE;QAAEC,OAAO,EAAE,WAAW;QAAEoB,QAAQ,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAnB,QAAA,EAC9D;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERvB,cAAc,iBACbhB,OAAA;MAAKgC,KAAK,EAAE;QAAEsB,SAAS,EAAE,EAAE;QAAEV,KAAK,EAAE,MAAM;QAAEW,MAAM,EAAE;MAAI,CAAE;MAAApB,QAAA,gBACxDnC,OAAA;QAAAmC,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCvC,OAAA,CAACF,mBAAmB;QAAC8C,KAAK,EAAC,MAAM;QAACW,MAAM,EAAC,MAAM;QAAApB,QAAA,eAC7CnC,OAAA,CAACT,QAAQ;UAACuB,IAAI,EAAEW,YAAa;UAAC+B,MAAM,EAAE;YAAEC,GAAG,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAE,CAAE;UAAAzB,QAAA,gBAChFnC,OAAA,CAACJ,aAAa;YAACiE,eAAe,EAAC;UAAK;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCvC,OAAA,CAACP,KAAK;YAACqE,OAAO,EAAC;UAAO;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzBvC,OAAA,CAACN,KAAK;YAACqE,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE;UAAE;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1BvC,OAAA,CAACL,OAAO;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXvC,OAAA,CAACH,MAAM;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACVvC,OAAA,CAACR,GAAG;YAACsE,OAAO,EAAC,UAAU;YAACE,IAAI,EAAC;UAAS;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9EID,GAAG;AAAAqD,EAAA,GAAHrD,GAAG;AAgFT,MAAMsD,IAAI,GAAG5E,QAAQ,CAAC6E,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cAACtE,OAAA,CAACY,GAAG;EAAAwB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAA0B,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}